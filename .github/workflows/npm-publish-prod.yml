name: Publish Production Release to npm
on:
  release:
    types: [published]

permissions:
  contents: write
  pull-requests: write

jobs:
  publish:
    if: github.event.release.target_commitish == 'main'
    runs-on: ubuntu-latest
    env:
      RELEASE_VERSION: ""
      PACKAGE_VERSION: ""
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0 

      - name: Checkout main branch
        run: git checkout main

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/

      - name: Get release version from GitHub
        run: echo "RELEASE_VERSION=${{ github.event.release.tag_name }}" >> $GITHUB_ENV

      - name: Get version from package.json
        run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Check if package.json version matches GitHub release
        run: |
          if [ "${{ env.RELEASE_VERSION }}" != "${{ env.PACKAGE_VERSION }}" ]; then
            echo "‚ùå ERROR: package.json version (${{ env.PACKAGE_VERSION }}) does not match GitHub release version (${{ env.RELEASE_VERSION }})"
            exit 1
          fi
        shell: bash

      - name: Clean cache
        run: npm cache clean --force

      - name: Install dependencies
        run: npm install

      - name: Build project (TypeScript)
        run: npm run build
        
      - name: Publish package to npm
        run: npm publish --tag latest --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
